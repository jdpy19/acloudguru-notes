SIMPLE STORAGE SERVICE

What is S3?
  S3 provides developers and IT teams with secure, durable, highly-scalable object storage. 
  Amazon S3 is easy to use, with a simple web services interface to store and retrieve any amount of data from anywhere on the web.

Not for OS, nor database. Mostly files, images, etc.

S3 is a safe place ot store your files.
It is object-based storage.
The data is spread across multiple devices and facilities.

S3 - The Basics
  S3 is object based
  Files can be from 0 bytes to 5 TB
  There is unlimited storage.
  Files are stored in buckets (similar to a folder, but its not a folder)
  S3 is a universal namespace. That is, names must be unique globally.
  When you upload a file to S3, you will receive a HTTP 200 code if the upload was successful.
  
Data Consistency Model for S3
  Read after Write consistency for PUTS of new objects.
  Eventual consistency for overwrite PUTS and DELETES (can take some time to propagate).

S3 is a simple key-value store
  S3 is object based. Objects consist of the following:
    Key (the is simply the name of the object)
    Value (This is simply the data, which is made up of a sequence of bytes)
    Version ID (Important for versioning)
    Metadata (Data about data you are storing)
    Subresources - bucket-specific configuration
      Bucket policies, Access control lists
      Cross Origin Resource Sharing (CORS)
      Transfer Acceleration

S3 - The Basics
  Built for 99.99% availability for the S3 platform
  Amazon Guarantee 99.9% availability
  Amazon guarantees 99.999999999% durability for S3 information (Remember 11x9s)
  Tiered Storage Available
  Lifecycle Management
  Versioning
  Encryption
  Secure your data - Access Control lists and bucket policies

S3 - Storage Tiers/Classes
  S3: 99.99% availability, 99.999999999% durability, 
  stored redundantly across mutliple devices in multiple facilities, 
  and is designed to sustain the loss of 2 facilities concurrently.

  S3 - IA (Infrequently Accessed): For data that is accessed less frequently, but requires rapid access when needed.
  Lower fee than S3, but you are charged a retrieval fee.

  S3 - One Zone IA: Same as IA however data is stored in a single AZ, still 99.999999999% durability, bu tonly 99.5% avaialbility.
    Cost is 20% less than regular S3-IA.
  
  Reduced Redundancy Storage: Designed to provide 99.99% durability and 99.99% availbaility of objects over a given year.
    Used for datat that can be recreated if lost.

  Glacier: Very cheap, but used for archival only. Optimized for data that is infrequently accessed and it takes 3-5 hours to restore from Glacier.
  
S3 - Intelligent Tiering
  Unknown or unpredictable access patterns
  2 tiers - frequent and infrequent access
  Automatically moves your data to the most cost-effective tier based on how frequently you access each object.
  99.999999999% durability
  99.9 Availability over a given year.
  Optimize Cost
  No fees for accessing your data but a small monthly fee for monitoring/automation $0.0025 per 1000 objects.

S3 - Charges
  Charged for:
    Storage per GB
    Requests (Get, Put, Copy, etx.)
    Storage management pricing
      Inventory, analytics, and object tags
    Data Management pricing
      Data transferred out of S3
    Transfer Acceleration
      Use of CloudFront to optimize transfers
    
S3 - Exam Tips
  Remember that S3 is object-based
  Not suitable to install an operating system or running a database on.
  Files can be from 0 Bytes to 5 TB
  There is unlimited storage.
  Files are stored in Buckets.
  S3 is a universal namespace. Names must be unique globally.
  Read after write consitency for puts of new objects
  Eventual consistency to overwrite puts and deltes (can take some time to propagate)

  S3 Storage Classes/Tiers

  Remember the core fundamentals of an S3 Object
    Key (name)
    Value (data)
    Version ID
    Metadata
    Subresources - bucket specific configuration
      Bucket Policies, Access Control lists
      Cors (Cross origin Resource Sharing)
      Transfer Acceleration
    Successfull uploads generate a HTTP 200 status code.
    Read the S3 FAQ

S3 Security
  By default, all newly created buckets are PRIRVATE.
  You can set up access control to your buckets using:
    Bucket POlicies - Applied at a bucket level.
    Access Control Lists - Applied at an object level
  S3 buckets can be configured to create access logs, which log all requests made to the S3 bucket. These logs can be written to another bucket.

S3 ACLs & Policies
  All buckets block public access by default.

S3 Encryption
  Encryption
    In Transit: SSL/TLS
    At Rest:
      Server Side Encryption 
        S3 Managed Keys - SSE-S3
        AWS Key Management Service, Managed Keys: SSE-KMS
        Server Side Encryption with Customer Provided Keys - SSE-C
      Client Side Encryption

  Enforcing Encyrption on S3 Buckets
    Every time a file is uploaded to S3, a PUT request is initiated.
    Example PUT:
      PUT /myFile HTTP/1.1
      Host: ..
      Date: ..
      Authorization: ..
      Content-Type: ..
      Content-Length: ..
      x-amz-meta-auther: ..
      Expect: 100-Continue

    If the file is to be encrypted at upload time, the x-amz-server-side-encryption parameter will be included in the request header

    Two options are currently available:
      x-amz-server-side-encryption: AES256 (SSE-S3 managed keys)
      x-amz-server-side-encryption: ams:kms (SSE-KMS - KMS managed keys)

    When this parameter is included in the header of the PUT request, it tells S3 to encrypt the object at the time of upload,
    using the specified encryption method.

    You can enforce the use of Server Side Encryption by using a Bucket Policy which denies any S3 PUT request which doesn't include the 
    x-amz-server-side-encryption parameter in the request header.

  Exam Tips
    Encryption IN-Transit
      SSL/TLS (HTTPS)

    Encryption at Rest
      Server side encryption
        SSE-S3
        SSE-KMS
        SSE-C
      Client side encryptions
    
    If you want to enforce the use of encryption for your files stored in S3, use an S3 bucket policy to deny all put requests that dont 
    include the x-amz-server-side-encryption parameter in the request.

  Set Up Encryption on an S3 Bucket

  CORS Configuration Lab
    Cross Origin Resource Sharing
      A way to allow code from one S3 bucket to reference another S3 bucket
    
CloudFront
  Amazon's content delivery network
  What is a CDN?
    A content delivery network (cdn) is a system of distributed servers (network) that delivers
    webpages an            of the webpage, and a content delivery server.
  
  Latency is going to vary based on geographic location.

  Transfer acceleration uses cloudfront technology, but there is a difference.
    CloudFront focuses on content delivery: Reads and downloads
    Transfer Acceleration focuses on uploads

  Edge Locations Forward requests to the server, if someone near the edge location requests the same content it pulls the cached items from the edge location.
  Items are cached during a time to live (afterwards, they are cleared from the cache)
  You can clear the cache yourself.

  Edge Location - This is the location where content is cached and can also be written. Seperate to an AWS Region/AZ
  Origin - This is the origin of all the files that the CDN will distribute. origins can be an S3 bucket, an Ec2 instance, an Elastic Load Balancer, or Route53
  Distribution - This the name given the CDN, which consits of a collection of edge locations
    Web Distribution - Typically used for websites
    RTMP - Real time messaging protocol - Used for media streaming.

  What is CloudFront?
    Amazon CloudFront can be used to deliver your entire website, including dynamic, static, streaming, and interactive
    content using a global network of edge locations. Requests for your content are automatically routed to the nearest edge location,
    so content is delivered with the best possible performance.

    Can be used to optimize performance for users accessing a website backed by S3.

    Amazon CloudFront is optimized to work with other AWS services, like S3, EC2, Elastic Load Balancer, Route53.
    Amazon Cloudfront also wokrs seamlessly with any non-aws origin server, which stores the original, definitive versions of your files.

    CloudFront Distribution Types:
      Web Distribution - Used for websites, HTTP/HTTPS, no Adobe Flash
      RTMP Distribution - Adobe Realt Time Mesaging Protocol

    Amazon S3 Transfer Acceleration enables fast, easy, and secure transfers of files over long distances between your end users and an S3 bucket.

    Transfer Acceleration takes advanatage of Amazon CloudFront's globally distributed edge locations.
    As the data arrives at an edge location, data is routed to S3 over an optimized network path.

S3 Performance Optimization
  S3 is designed to support very high request rates.
  However, if your buckets are routinely receiving >100 PUT/LIST/DELETE or >300 Get requests per second,
  then there are some best practices guidelines that will help optimize S3 Performance.

  GET-Intensive Workloads - use CloudFront content delivery service to get best performance. 
    CloudFront will cache your most frequentyl accessed objects and will reduce latency for your GET requests.

  Mixed request type workloads - a mix of GET, PUT, DELETE, GET
    The key names you use for your objects can impact performance for intensiver workloads

    S3 uses the key name to determine which partition an object will be stored in
    The use of sequential names prefeixed with a time stamp or alphabetical sequence increases the likelihood of having multiple objects stored on the same partition.
    For Heavy worklodas this can cause I/O issues and contention
    By using a random prefix to key names, you can force S3 to distribute your keys across multiple partitions, distributing the I/O workload

*Check S3 Performance Guidelines before the exam
S3 Performance unpredictable
  In July 2018, Amazon announced a massive increase in S3 performance

  3500 put requests per second
  5500 get requests per second

  This new increased performance negates the previous guidance to randomize your object keynames to achieve faster performance
  
S3 Storage Classes
  Desigend for Different Use Cases
    S3 Standard
      High Availability and durability
        Data is stored redundantly across multiple devices in multipler facilities (>=3 AZs)
          99.9% Availability
          99.999999999% Durability
      Designed for Frequent Access
      Suitable for most workloads
    S3 Standard-Infrequent Access (S3-IA)
      Designed for infrequently accessed data
        Rapid Access: Used for data that is accessed less frequently but requires rapid access when needed.
        You pay to access the data: There is a low per GB storage price and a per GB retrieval fee
        Use Cases: Great for long-term storage, backups, and as a data store for disaster recovery files.
      99.9% Availibility
      99.999999999% Durability
    S3 One Zone-Infrequent Access
      Like S3-IA, but data is stored redundantly within a single AZ
      Costs 20% less than regular S3-IA
      Great for long-lived, infrequently accessed, non-critical data
      Not a great store for backups
      99.5% Availability
      99.999999999% Durability
    S3 Glacier
      Very cheap storage
      Optimized for data that is very infrequently accessed
      You pay each time you access your data
      Use only for archiving data
      Provides long-term data archiving with retrieval times that range from 1 minute to 12 hours: historical data only accessed a few times per year
      99.9% Availibility
      99.999999999% Durability
    S3 Glacier Deep Archive
      Archiving rarely accessed data with a default retrieval time of 12 hours: Great for financial reocrds that may be accessed once or twice per year.
      99.9% Availibility
      99.999999999% Durability
    Intelligent-Tiering
      2 Tiers: Frequent and Infrequent
      Automatically moves your data to the most cost-effective tier based on how frequently you access each object
      Monthly fee of $0.0025 per 1000 objects
      99.9% Availibility
      99.999999999% Durability

S3 ACLs and Bucket Policies
  ACL = Access Control List

Lab: S3 Creating a static website